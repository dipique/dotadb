@using DotAPicker.Models
@model Relationship

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<link href="@Url.Content("~/Content/sliders.css")" rel="stylesheet" type="text/css" />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Relationships</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Patch, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.UserId)
            @Html.EditorFor(model => model.Patch, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Patch, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <i id="typeNote"></i>
        </div>
    </div>

    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(m => m.SubjectEntity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SubjectEntity, (IEnumerable<SelectListItem>)ViewBag.SubjectOptions, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ObjectEntity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ObjectEntity, (IEnumerable<SelectListItem>)ViewBag.SubjectOptions, new { @class = "form-control" })
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <i id="objectNote"></i>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Deprecated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Deprecated)
                @Html.ValidationMessageFor(model => model.Deprecated, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    updateCounterNote(); //on page load

    $('#Type').change(function () {
        updateCounterNote();
    });

    $('#ObjectEntity').change(function () {
        updateCounterNote();
    });

    $('#SubjectEntity').change(function () {
        updateCounterNote();
    });

    function updateCounterNote() {
        //deal with non-counters first
        if ($('#Type').find(":selected").text() != 'Counter') {
            $('#typeNote')[0].innerText = '';
            $('#objectNote')[0].innerText = '';
            return;
        }

        //set the counter type note
        $('#typeNote')[0].innerText = 'Note: When choosing Counter, make sure the Subject counters the Object.';

        //set the object type note
        $('#objectNote')[0].innerText = 'This relationship says: ' + $('#SubjectEntity').find(":selected").text() + ' counters ' + $('#ObjectEntity').find(":selected").text();
    }
</script>