@model DotAPicker.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<string> profileOptions = ViewBag.ProfileOptions;
}

<link href="@Url.Content("~/Content/sliders.css")" rel="stylesheet" type="text/css" />
<link href="~/Content/chosen.css" rel="stylesheet" />
<script src="~/Scripts/chosen.jquery.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentPatch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentPatch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentPatch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ProfileType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProfileType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowDeprecatedTips, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ShowDeprecatedTips)
                    @Html.ValidationMessageFor(model => model.ShowDeprecatedTips, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShowDeprecatedRelationships, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ShowDeprecatedRelationships)
                    @Html.ValidationMessageFor(model => model.ShowDeprecatedRelationships, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SyncedProfiles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10" style="padding-left: 0px" id="@nameof(Model.SyncedProfiles)">
                    @Html.ListBoxFor(model => model.SyncedProfiles,
                                                    new MultiSelectList(ViewBag.ProfileOptions, Model.SyncedProfiles),
                                                    new { @class = "label-multi-select", size = 2, @data_placeholder = "Select one or more profiles" })
                    @Html.ValidationMessageFor(model => model.SyncedProfiles, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LabelOptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LabelOptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LabelOptions)
            </div>
            <div class="col-md-2"></div>
            <div class="col-md-10">
                <i>Note: To add a label, just type a new one into one of the label entry boxes. To delete, remove all instances of that label.</i>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to User List", "Index")
</div>

<script>
    $('.label-multi-select').chosen({
        width: "300px",
        create_option: false
    });
</script>