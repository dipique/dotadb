@using DotAPicker.Models
@model List<Relationship>

@{
    ViewBag.Title = "Relationships";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/chosen.css" rel="stylesheet" />
<link href="~/Content/filter-table.css" rel="stylesheet" />
<script src="~/Scripts/chosen.jquery.js"></script>
<script src="~/Scripts/filter-table.js"></script>

<h1>Tips</h1>

@Html.ActionLink("(new)", "Create", new { }, new { @class = "create-link", title = "New Relationship" })

<div class="col-xs-12">
    <div class="col-xs-2">
        <input class="text-search" type="text" id="nameFilter" style="display:inline-block" onkeyup="filterFunction()" placeholder="Search hero or label name..." />
    </div>
    <div class="col-xs-3">
        <select multiple id="typeFilter" class="form-control" onchange="filterFunction()">
            <option value="">Search by relationship type</option>
            @foreach (string option in Extensions.GetEnumOptions(typeof(TipType), typeof(Relationship)))
            {
                <option value="@option">@option</option>
            }
        </select>
    </div>
    <div class="col-xs-7">
        <input class="text-search" type="text" id="textFilter" style="display:inline-block" onkeyup="filterFunction()" placeholder="Search relationship text..." />
    </div>
</div>

<div class="col-xs-12">
    <div class="data-row">
        <div class="header-cell col-xs-2" style="min-width: 175px">Subject Name</div>
        <div class="header-cell col-xs-2" style="min-width: 175px">Object Name</div>
        <div class="header-cell" style="display:none">Name Set</div>
        <div class="header-cell col-xs-2">Type</div>
        <div class="header-cell col-xs-6">Text</div>
    </div>
    <div id="filterTable">
        @for (int x = 0; x < Model.Count(); x++)
        {
            <div class="data-row">
                <div class="data-row-cell col-xs-2" style="min-width: 175px" id="heroName">
                    @Model[x].SubjectName
                    <div class="link-padding">
                        @Html.ActionLink("(edit)", "Edit", new { id = Model[x].Id }, new { @class = "edit-link", title = "Edit Tip" })
                        @Html.ActionLink("(delete)", "Delete", new { id = Model[x].Id }, new { @class = "delete-link", title = "Delete Tip" })
                    </div>
                </div>
                <div class="data-row-cell col-xs-2" style="min-width: 175px" id="heroName">
                    @Model[x].ObjectName
                </div>
                <div class="data-row-cell" style="display:none" id="nameValue">@Model[x].NameSet</div>
                <div class="data-row-cell col-xs-2" id="typeValue">
                    @Html.DisplayFor(m => m.First(t => t.Id == Model[x].Id).Type)
                </div>
                <div class="data-row-cell col-xs-6" id="textValue">@Model[x].Text</div>
            </div>
        }
    </div>
</div>

<script>
    $("#typeFilter").chosen({
        width: "300px"
    });

    //filterSet object that configures the filterTable
    var filterSet = [[
        "nameFilter",
        "text",
        "nameValue",
        "inner"   
    ], [
        "typeFilter",
        "multi",
        "typeValue",
        "inner"
    ], [
        "textFilter",
        "text",
        "textValue",
        "inner"
    ]
    ];
</script>